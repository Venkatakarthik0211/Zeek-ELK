AWSTemplateFormatVersion: '2010-09-09'
Description: Python Architecture - VPC-2.0

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-04a81a99f5ec58529
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref InstanceSecurityGroup
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe
          apt-get update -y
          apt-get install -y python3 python3-venv git python3-dev default-libmysqlclient-dev build-essential pkg-config libmysqlclient-dev
          # Clone the repository
          git clone https://github.com/Venkatakarthik0211/testrepo.git
          # Navigate to the project directory and set up the virtual environment
          cd /home/ubuntu/testrepo/three-tier/python/test/
          python3 -m venv venv
          source venv/bin/activate
          # Install Gunicorn and other required packages
          pip3 install gunicorn
          pip3 install -r requirements.txt
          # Install Apache and WSGI
          apt-get install apache2 libapache2-mod-wsgi-py3 -y
          systemctl enable apache2
          systemctl start apache2
          systemctl status apache2
          a2enmod wsgi
          # Write the Apache configuration file
          SERVER_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          cat <<EOF > /etc/apache2/sites-available/flaskapp.conf
          <VirtualHost *:80>
              ServerName $SERVER_IP
              ServerAdmin youremail@example.com
              WSGIScriptAlias / /home/ubuntu/testrepo/three-tier/python/test/flaskapp.wsgi
              <Directory /home/ubuntu/testrepo/three-tier/python/test/>
                  Require all granted
              </Directory>
              Alias /static /home/ubuntu/testrepo/three-tier/python/test/static
              <Directory /home/ubuntu/testrepo/three-tier/python/test/static/>
                  Require all granted
              </Directory>
              ErrorLog error.log
              LogLevel warn
              CustomLog access.log combined
          </VirtualHost>
          EOF
          # Write the WSGI file
          cat <<EOF > /home/ubuntu/testrepo/three-tier/python/test/flaskapp.wsgi
          import sys
          import logging
          logging.basicConfig(stream=sys.stderr)
          sys.path.insert(0, "/home/ubuntu/testrepo/three-tier/python/test")
          from app import app as application
          EOF
          # Set directory permissions
          chmod +x /home/ubuntu
          chmod +x /home/ubuntu/testrepo
          chmod +x /home/ubuntu/testrepo/three-tier
          chmod +x /home/ubuntu/testrepo/three-tier/python
          chmod +x /home/ubuntu/testrepo/three-tier/python/test
          # Enable Apache configuration & Restart Apache
          a2ensite flaskapp.conf
          systemctl restart apache2

      Tags:
        - Key: Name
          Value: EC2Instance

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: InstanceSecurityGroup

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: InstanceRole
    Properties:
      Roles:
        - !Ref InstanceRole